{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication type"
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "OS Admin password or SSH Key depending on value of authentication type"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The Location For the resources"
            },
            "defaultValue": "[resourceGroup().location]"
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the VM to create"
            },
            "defaultValue": "Standard_DS1_V2"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/ned1313/terraform-vm/master/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation."
            },
            "defaultValue": ""
        },
        "operatingSystem": {
            "type": "string",
            "defaultValue": "UbuntuServer_16.04-LTS",
            "metadata": {
                "description": "Operating system to use for the virtual machine."
            },
            "allowedValues": [
                "UbuntuServer_18.04-LTS",
                "UbuntuServer_16.04-LTS"
            ]
        },
        "desktopInstall": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Installs Ubuntu Mate desktop GUI"
            }
        }
    },
    "variables": {
        "dnsLabelPrefix": "[concat('msi',uniquestring(resourceGroup().id))]",
        "infraStorageAccountName": "[take(concat('storeinfra', uniquestring(resourceGroup().id), variables('dnsLabelPrefix')),24)]",
        "stateStorageAccountName": "[take(concat('storestate', uniquestring(resourceGroup().id), variables('dnsLabelPrefix')),24)]",
        "nicName": "[concat('nic',uniquestring(resourceGroup().id))]",
        "networkSecurityGroupName": "[concat('nsg',uniquestring(resourceGroup().id))]",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "[concat('pip',uniquestring(resourceGroup().id))]",
        "vmPrefix": "vm",
        "vmName": "[concat(variables('vmPrefix'), uniquestring(resourceGroup().id))]",
        "virtualNetworkName": "[concat('vnet',uniquestring(resourceGroup().id))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "installParm1": "[concat(' -u ', parameters('adminUsername'))]",
        "installParm2": "[concat(' -s ', subscription().subscriptionId)]",
        "installParm3": "[concat(' -a ', variables('stateStorageAccountName'))]",
        "installParm4": "[if(equals(parameters('desktopInstall'), bool('true')), concat(' -d ', parameters('desktopInstall')), '')]",
        "installParm5": "[concat(' -t ', subscription().tenantId)]",
        "createVMUrl": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/createVM.json', parameters('_artifactsLocationSasToken')))]",
        "createRBACUrl": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/setUpRBAC.json', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('infraStorageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('stateStorageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2018-07-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('Location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-07-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-remote-access",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "[if(contains(toLower(parameters('operatingSystem')), 'windows'), 3389, 22)]",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "name": "creatingVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('createVMUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "operatingSystem": {
                        "value": "[parameters('operatingSystem')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nsgId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                    },
                    "subnetRef": {
                        "value": "[variables('subnetRef')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmName": {
                        "value": "[variables('vmName')]"
                    },
                    "publicIPAddressName": {
                        "value": "[variables('publicIPAddressName')]"
                    },
                    "nicName": {
                        "value": "[variables('nicName')]"
                    }
                }
            }
        },
        {
            "name": "creatingRBAC",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "creatingVM"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('createRBACUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference('Microsoft.Resources/deployments/creatingVM', '2018-05-01').outputs.principalId.value]"
                    },
                    "storageAccountName": {
                        "value": "[variables('stateStorageAccountName')]"
                    },
                    "installParm1": {
                        "value": "[variables('installParm1')]"
                    },
                    "installParm2": {
                        "value": "[variables('installParm2')]"
                    },
                    "installParm3": {
                        "value": "[variables('installParm3')]"
                    },
                    "installParm4": {
                        "value": "[variables('installParm4')]"
                    },
                    "installParm5": {
                        "value": "[variables('installParm5')]"
                    },
                    "storageAccountKey": {
                        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('stateStorageAccountName')), '2017-10-01').keys[0].value]"
                    },
                    "vmName": {
                        "value": "[variables('vmName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ]
}